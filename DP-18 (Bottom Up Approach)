int countPartitions(int n, int d, vector<int> &arr) {
    // Write your code here.
	
	int mod = (int)(1e9 + 7);
	
	int totalSum = 0;
	
	for(int num : arr) totalSum += num;
	
	if((totalSum - d) < 0 or (totalSum - d) & 1) return 0;
	
	int target = (totalSum - d) / 2;
	
	vector<vector<int> > dp(n, vector<int>(target+1, 0));
	
	if(arr[0]==0) dp[0][0] = 2;
	else dp[0][0] = 1;
	
	if(arr[0] != 0 and arr[0] <= target) dp[0][arr[0]] = 1;
	
	for(int i=1;i<n;++i) {
		for(int j=0;j<=target;++j) {
			
			int pick = 0;
			int nonPick = dp[i-1][j];
			
			if(j >= arr[i]) 
				pick = dp[i-1][j-arr[i]];
			
			dp[i][j] = (pick + nonPick) % mod;
		}
	}
	
	return dp[n-1][target];
}
