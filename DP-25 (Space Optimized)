# include <bits/stdc++.h>

int lcs(string s, string t) {
	//Write your code here
    
    int n1 = s.size();
    int n2 = t.size();
    
    vector<int> prevDp(n2, 0);
    vector<int> currDp(n2, 0);
    
    for(int i=0;i<n1;++i) {
        
        for(int j=0;j<n2;++j) {
            
            if(i==0) {
                currDp[j] = (s[i]==t[j]) ? 1 : 0;
            }
            else if(j==0) {
                currDp[j] = (s[i]==t[j]) ? 1 : 0;
            }
            else if(s[i]==t[j]) {
                currDp[j] = 1 + prevDp[j-1];
            }
            else if(i and j) {
                currDp[j] = max(prevDp[j], currDp[j-1]);
            }
        }
        
        prevDp = currDp;
    }
    
    return currDp[n2-1];
}
