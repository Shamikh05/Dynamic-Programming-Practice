int minSubsetSumDifference(vector<int>& arr, int n) {
	// Write your code here.
	
	int sum = 0;
	
	for(int num : arr) sum += num;
	
	vector<bool> prev(sum+1, false);
	vector<bool> curr(sum+1, false);
	
	prev[0] = curr[0] = true;
	
	if(arr[0] <= sum) prev[arr[0]] = true;
	
	for(int i=1;i<n;++i) {
		
		for(int j=1;j<=sum;++j) {
			
			bool pick = false;
			bool nonPick = prev[j];
			
			if(j >= arr[i]) pick = prev[j-arr[i]];
			
			curr[j] = pick | nonPick;
		}
		
		prev = curr;
	}
	
	int ans = 1e5;
	
	for(int i=0;i<=sum;++i) {
		
		if(curr[i]) {
			
			int bucket1 = i;
			int bucket2 = sum - i;
			
			ans = min(ans, abs(bucket1 - bucket2));
		}
	}
	
	return ans;
}
