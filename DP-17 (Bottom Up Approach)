int findWays(vector<int> &num, int tar) {
    // Write your code here.
	
	int n = num.size();
	
	vector<vector<int> > dp(n, vector<int>(tar+1, 0));
	
	if(num[0] <= tar) dp[0][num[0]] = 1;
	
	for(int i=0;i<n;++i) dp[i][0] = 1;
	
	for(int i=1;i<n;++i) {
		
		for(int j=1;j<=tar;++j) {
			
			int pick = 0;
			int nonPick = dp[i-1][j];
			
			if(j >= num[i]) pick = dp[i-1][j-num[i]];
			
			dp[i][j] = (pick + nonPick);
		}
	}
	
	return dp[n-1][tar];
}
