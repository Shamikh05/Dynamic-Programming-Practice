int knapsack(vector<int> weight, vector<int> value, int n, int maxWeight) {
	// Write your code here
	
	vector<vector<int> > dp(n, vector<int>(maxWeight+1, 0));
	
	for(int i=1;i<=maxWeight;++i) 
		dp[0][i] = (weight[0] <= i) ? value[0] : 0;
	
	for(int i=1;i<n;++i) {
		
		for(int j=1;j<=maxWeight;++j) {
			
			int take = 0;
			int notTake = dp[i-1][j];
			
			if(weight[i] <= j) take = value[i] + dp[i-1][j - weight[i]];
			
			dp[i][j] = max(take, notTake);
		} 
	}
	
	return dp[n-1][maxWeight];
}
